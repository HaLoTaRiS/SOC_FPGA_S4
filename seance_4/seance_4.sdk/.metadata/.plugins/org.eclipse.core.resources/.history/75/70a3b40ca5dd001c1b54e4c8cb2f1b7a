/*
 *  TP 4 : SOC / FPGA
 *  Jeremy VICENTE & Baptiste FRITOT
 *  tp_seance_4.c
 *
 *  T8 : Réaliser un MACC_IP
 *  T9 : Tester le MACC_IP
 *  T10 : Mesure du temps
 *  T11 : Ajout d'un contrôleur DMA
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "sleep.h"
#include "time.h"



int main()
{
    init_platform();
	/*********** CODE TP 4 *****************/
	xil_printf ("=================================\r\n");
	xil_printf ("      Seance 4 - MACC_IP\r\n");
	xil_printf ("Baptiste FRITOT - Jeremy VICENTE\r\n");
	xil_printf ("=================================\r\n\r\n");

	srand(4);					// Paramètre pour avoir des valeurs aléatoires
	volatile int *loc_addr = (int *) XPAR_MACC_IP_0_S00_AXI_BASEADDR; // voir Xparameter
	uint8_t somme_soft =0;			// Initialise une variable somme pour le soft
	*(loc_addr+22) = 0;				// Initialise le registre controle de l'ip
	int8_t somme_hard = 0; 			// Initialise une variable somme pour le hard


	/********** Question T9 ***********/
	// Ecrire des valeurs aléatoire dans table 1
	xil_printf ("Ecriture sur Tab[] :\r\n");

	for (uint8_t i = 0; i<10; i++) {
		int8_t val	= (rand()%300)-100;
		*(loc_addr+i) = val;
		xil_printf ("   - Tab[%d]  = %d\r\n", i, val);
	}
	// Ecrire des valeurs aléatoire dans table 2
	for (uint8_t i = 10; i<20; i++) {
		// Récriture dans le registre ptr_slv_reg[i]
		//		  *(ptr_slv_reg+i) = 1;
		int8_t val	= (rand()%300)-100;
		*(loc_addr+i) = val;
		xil_printf ("   - Tab[%d]  = %d\r\n", i, val);
	}


	// Lecture des valeurs
	xil_printf ("\r\nLecture de Tab[] :\r\n");
	for (uint8_t i=2; i<10; i++) {
		int8_t val = *(loc_addr+i);
		xil_printf ("   - Tab[%d]  = %d\r\n",i, val);
		somme_soft = somme_soft +*(loc_addr+i);
	}

    cleanup_platform();
    return 0;
}
